generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model inm_real_estate {
  id       Int    @id @default(autoincrement())
  email    String @unique @db.VarChar(150)
  password String @db.VarChar(128)
}

model inm_user {
  id               Int          @id @default(autoincrement())
  email            String       @unique @db.VarChar(150)
  first_name       String       @db.VarChar(40)
  last_name        String       @db.VarChar(40)
  dni              Int
  personal_address String       @db.VarChar(20)
  work_address     String?      @db.VarChar(30)
  phone            String?      @db.VarChar(35)
  cell_phone       String?      @db.VarChar(35)
  owner            inm_owner[]
  client           inm_client[]
}

model inm_owner {
  id      Int          @id @default(autoincrement())
  id_user Int          @unique
  user    inm_user     @relation(fields: [id_user], references: [id])
  estates inm_estate[]
}

model inm_client {
  id                 Int                      @id @default(autoincrement())
  id_user            Int                      @unique
  user               inm_user                 @relation(fields: [id_user], references: [id])
  billing            inm_billing[]
  estate             inm_estate[]
  prospective_buyers inm_prospective_buyers[]
}

model inm_billing {
  id        Int        @id @default(autoincrement())
  id_client Int        @unique
  client    inm_client @relation(fields: [id_client], references: [id])
}

model inm_estate {
  id                 Int                      @id @default(autoincrement())
  type_estate        enum_type_estate
  province           String                   @db.VarChar(20)
  city               String                   @db.VarChar(50)
  location           String                   @db.VarChar(50)
  neighborhood       String?                  @db.VarChar(50)
  address            String                   @db.VarChar(100)
  address_number     String                   @db.VarChar(10)
  floor              String?                  @db.VarChar(10)
  flat               String?                  @db.VarChar(10)
  internal_number    String?                  @db.VarChar(10)
  between_streets    String?                  @db.VarChar(70)
  internal_state     String                   @db.VarChar(50)
  area_m2            Int
  area_m3            Int?
  antiquity          Int
  bedrooms           Int
  bathrooms          Int
  garages            Int
  floors             Int
  garden             Boolean
  pool               Boolean
  credit             Boolean
  commercial_use     Boolean
  has_cartel         Boolean
  pets               Boolean
  orientation        String                   @db.VarChar(20)
  type_ceiling       ceiling_type
  luminosity         luminosity_type
  type               estate_type
  status             estate_status
  price              Int?
  id_owner           Int
  owner              inm_owner                @relation(fields: [id_owner], references: [id])
  id_client          Int?
  client             inm_client?              @relation(fields: [id_client], references: [id])
  prospective_buyers inm_prospective_buyers[]
}

enum enum_type_estate {
  Duplex
  Casa
  Departamento
  Monoambiente
  Campo
  Quinta
  Terreno
  Local
  Oficina
  Bodega
  Edificio
  Loteo
  Cochera
  Consultorio
  Otro
}

enum luminosity_type {
  Buena
  Regular
  Mala
}

enum ceiling_type {
  Loza
  Chapa
  Tejas
}

enum estate_type {
  Alquiler
  Venta
  Ambos
}

enum estate_status {
  Alquilada
  Vendida
  En_construccion
  En_reparacion
  Disponible
}

model inm_prospective_buyers {
  id        Int        @id @default(autoincrement())
  id_client Int        @unique
  client    inm_client @relation(fields: [id_client], references: [id])
  id_estate Int        @unique
  estate    inm_estate @relation(fields: [id_estate], references: [id])
}
